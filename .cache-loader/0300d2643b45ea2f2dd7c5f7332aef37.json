{"remainingRequest":"/Users/w/var/www/centerofthegoldenone.com/www/wp-content/themes/CGO/node_modules/babel-loader/lib/index.js??ref--0-1!/Users/w/var/www/centerofthegoldenone.com/www/wp-content/themes/CGO/js/components/pages/offerings/index.js","dependencies":[{"path":"/Users/w/var/www/centerofthegoldenone.com/www/wp-content/themes/CGO/js/components/pages/offerings/index.js","mtime":1518029776446},{"path":"/Users/w/var/www/centerofthegoldenone.com/www/wp-content/themes/CGO/.babelrc","mtime":1517961114572},{"path":"/Users/w/var/www/centerofthegoldenone.com/www/wp-content/themes/CGO/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/w/var/www/centerofthegoldenone.com/www/wp-content/themes/CGO/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nrequire('../../../../scss/pages/offerings.scss');\n\nvar _utils = require('./utils');\n\nvar _templateElements = require('./templateElements');\n\nvar _SAMPLE_DATA = require('./SAMPLE_DATA');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\njQuery(document).ready(function ($) {\n  const { pathname } = window.location;\n  const splitPath = pathname.split('/');\n  let path = splitPath[splitPath.length - 2];\n\n  const isOfferingsPage = path === 'offerings';\n  const isMeditationsPage = pathname.indexOf('meditation') !== -1;\n  const isIntroductoryPage = pathname.indexOf('introductory') !== -1;\n  const isSeminarsPage = pathname.indexOf('seminar') !== -1;\n\n  // maybe just for testing purposes, but make top-level 'offerings' behave like 'meditation' page\n  if (isOfferingsPage) {\n    path = 'meditation';\n  }\n\n  // global variables modified by filters for sorting events\n  let activeLocationSlug = 'denver';\n  let activeTypeFilter = 'all';\n  const monthsExpanded = {};\n\n  // use sample arrays for meditation data\n  let currentList = _SAMPLE_DATA.meditationTypes;\n  if (path === 'introductory') {\n    currentList = _SAMPLE_DATA.introductoryTypes;\n  } else if (path === 'seminars') {\n    currentList = _SAMPLE_DATA.seminarTypes;\n  }\n\n  // everything above has to do with dynamic page loads\n\n\n  // this function will do more, deal with splitting and truncation of top description text\n  const formatHeaderTypeDescription = () => {\n    $('.az-offerings-header-description-text').append(`<div class='read-more'>Read More...</div>`); // this will need to do more also\n  };\n\n  // replace dumbass wp theme wrappers with the raw html they're supposed to be\n  // also dude, probably just like rewrite the css, fuck this...\n  const ditchDescriptionBlockThemeWrappers = async () => {\n    const eachWrapper = $('.az-offerings-types-description-container .wpb_wrapper').children('.wpb_raw_code');\n    await $(eachWrapper).each((i, wrapper) => {\n      const actualContent = $(wrapper).children('txt-block');\n      console.log(actualContent);\n      $('.az-offerings-types-description-container').prepend(actualContent);\n    });\n    await $('.az-offerings-types-description-container').children().each((i, child) => {\n      if (!$(child).hasClass('txt-block')) {\n        $(child).remove();\n      }\n    });\n  };\n\n  // these functions sort thru data\n  const getCorrectEventSet = eventObj => {\n    // get the actual event object\n    // could be page-specific\n    for (let eventType of Object.keys(eventObj)) {\n      if (eventType === path) {\n        return eventObj[eventType];\n      }\n    }\n  };\n\n  const bindEventsToLocations = eventList => eventList.sort((a, b) => (0, _moment2.default)(a.date, 'X') - (0, _moment2.default)(b.date, 'X')).map(event => {\n    const eventLocation = () => {\n      for (let location of _SAMPLE_DATA.SAMPLE_DATA.locations) {\n        if (location.place_id === event.location_id) {\n          return location;\n        }\n      }\n    };\n    const eLoc = eventLocation();\n    const { phone, address } = eLoc;\n    return _extends({\n      location_title: eLoc.title,\n      slug: eLoc.menu_slug,\n      address,\n      phone\n    }, event);\n  });\n\n  const filterByLocation = eventList => eventList.filter(event => event.slug === activeLocationSlug);\n\n  const filterByType = eventList => {\n    const filteredList = activeTypeFilter === 'all' ? eventList : eventList.filter(event => event.type === activeTypeFilter.replace(' ', '_').toLowerCase());\n    return filteredList;\n  };\n\n  const fullyTransformTheseEvents = allEvents => {\n    const correctFlatEventSet = getCorrectEventSet(allEvents);\n    const eventsWithLocations = bindEventsToLocations(correctFlatEventSet);\n    const thisLocationEvents = filterByLocation(eventsWithLocations);\n    const thisTypeEvents = filterByType(thisLocationEvents);\n    const splitEventObj = { Recurring: [] };\n\n    thisTypeEvents.forEach(event => {\n      if (event.recurring) {\n        splitEventObj.Recurring.push(event);\n      } else {\n        const splitDate = event.date.split(' ');\n        const month = splitDate[0] + '_' + splitDate[splitDate.length - 1];\n        if (!splitEventObj[month]) {\n          splitEventObj[month] = [];\n        }\n        splitEventObj[month].push(event);\n        monthsExpanded[month] = false;\n      }\n    });\n    return splitEventObj;\n  };\n\n  let fullyTransformedEventSet = _extends({}, fullyTransformTheseEvents(_SAMPLE_DATA.SAMPLE_DATA.events));\n\n  const refreshEventList = () => {\n    const prevSet = _extends({}, fullyTransformedEventSet);\n    if (prevSet !== _extends({}, fullyTransformTheseEvents(_SAMPLE_DATA.SAMPLE_DATA.events))) {\n      fullyTransformedEventSet = _extends({}, fullyTransformTheseEvents(_SAMPLE_DATA.SAMPLE_DATA.events));\n      renderEventData();\n    }\n  };\n\n  const renderTypesFilter = () => {\n    currentList.forEach(item => {\n      const formatItem = item.replace(/[^a-zA-z]/g, '_');\n      if ($('#az-offerings-filter-focus').children(`#${formatItem}`).length < 1) {\n        $('#az-offerings-filter-focus').append($(`\n          <li id='${formatItem}' class='az-offerings-filter-item'>\n            <a>${item}</a>\n          </li>\n        `));\n      }\n    });\n    const thisChild = $('.az-offerings-filter-item').children('a');\n    (0, _utils.setActiveItemFilter)(thisChild, activeTypeFilter);\n    thisChild.click(e => {\n      activeTypeFilter = $(e.target).text();\n      (0, _utils.setActiveItemFilter)(thisChild, activeTypeFilter);\n      $('.az-offerings-location-detail-wrapper').empty();\n      refreshEventList();\n    });\n  };\n\n  const renderTypesDescriptionBlocks = () => {\n    const txtContainer = $('.az-offerings-types-description-container');\n    currentList.forEach(title => {\n      const flatTitle = title.replace(/[^a-zA-z]/g, '_');\n      if (txtContainer.children(`#${flatTitle}`).length < 1) {\n        txtContainer.append((0, _templateElements.descriptionTxtBlock)(title, flatTitle));\n      }\n    });\n    const blockEl = $('.az-offerings-types-description-container .txt-block');\n    blockEl.css('width', `${100 / currentList.length}%`);\n    const newWidth = blockEl.css('width');\n    blockEl.css('height', newWidth);\n  };\n\n  const handleExpandingMonths = () => {\n    const monthKeys = Object.keys(monthsExpanded);\n    monthKeys.forEach(month => {\n      $(`.${month}`).click(() => {\n        monthsExpanded[month] = !monthsExpanded[month];\n        $(`.${month}`).children('*:not(i, svg)').toggle(300);\n        $(`.${month}`).children('i').toggleClass('fa-angle-down fa-angle-up');\n      });\n    });\n  };\n\n  const renderEventData = () => {\n    let formatPath = path;\n    if (path === 'offerings') {\n      formatPath = 'meditation';\n    }\n    const detailsWrapper = $('.az-offerings-location-detail-wrapper');\n\n    if (detailsWrapper.children(`#${event.id}`).length < 1) {\n      Object.keys(fullyTransformedEventSet).forEach(type => {\n        detailsWrapper.append($(`<div class='date-category ${type}'>${type.replace('_', ' ')}</div>`));\n        const expandIcon = monthsExpanded[type] ? 'down' : 'up';\n        if (type !== 'Recurring') {\n          $(`.${type}`).append(`<i class='fas fa-angle-down'></i>`);\n        }\n        fullyTransformedEventSet[type].forEach(event => {\n          if ($(`.${type}`).children(`#${event.id}`).length < 1) {\n            $(`.${type}`).append((0, _templateElements.detailInner)(event));\n          }\n        });\n        if (type !== 'Recurring') {\n          $(`.${type}`).children('*:not(i, svg)').hide();\n        }\n      });\n    }\n\n    handleExpandingMonths();\n  };\n\n  const renderLocationsMenu = () => {\n    const menuWrapper = $('.az-offerings-locations-menu-wrapper ul');\n    const { locations } = _SAMPLE_DATA.SAMPLE_DATA;\n\n    locations.forEach(location => {\n      if (menuWrapper.children(`#${location.menu_slug}`).length < 1) {\n        menuWrapper.append(`\n          <li id='${location.menu_slug}' class='az-offerings-locations-menu-item'>\n            <a>${location.menu_slug.replace('_', ' ')}</a>\n          </li>\n        `);\n      }\n    });\n\n    const menuItems = $('.az-offerings-locations-menu-item a');\n\n    (0, _utils.setActiveItemFilter)(menuItems, activeLocationSlug);\n\n    menuItems.each((i, item) => {\n      $(item).append($(`<div class='active-line'></div>`));\n      if (!$(item).hasClass('active')) {\n        $(item).children('.active-line').hide();\n      }\n    });\n\n    menuItems.click(e => {\n      activeLocationSlug = $(e.target).text().replace(' ', '_');\n      (0, _utils.setActiveItemFilter)(menuItems, activeLocationSlug);\n      $('.az-offerings-location-detail-wrapper').empty();\n      refreshEventList();\n      menuItems.children('.active-line').hide();\n      $(e.target).children('.active-line').show(250);\n    });\n  };\n\n  function initDoc() {\n    formatHeaderTypeDescription();\n    // ditchDescriptionBlockThemeWrappers()\n    renderTypesFilter();\n    // renderTypesDescriptionBlocks()\n    renderEventData();\n    renderLocationsMenu();\n  }\n\n  initDoc();\n});",null]}